#include <iostream>
#include <map>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int N;
    cin >> N;
    map<int, int> users;
    for (int i = 0; i < N; i++) {
        int userID, balance;
        cin >> userID >> balance;
        users[userID] = balance;
    }

    int T;
    cin >> T;
    for (int i = 0; i < T; i++) {
        int from_userID, to_userID, amount;
        cin >> from_userID >> to_userID >> amount;
        if (users.find(from_userID) != users.end() && users[from_userID] >= amount) {
            users[from_userID] -= amount;
            users[to_userID] += amount;
            cout << "Success" << endl;
        } else {
            cout << "Failure" << endl;
        }
    }

    vector<pair<int, int>> sortedUsers(users.begin(), users.end());
    sort(sortedUsers.begin(), sortedUsers.end(), [](pair<int, int> a, pair<int, int> b) {
        return a.second < b.second;
    });
 cout<< endl;
    for (auto &user : sortedUsers) {
        cout << user.first << " " << user.second << endl;
    }

    return 0;
}
